# -*- coding: utf-8 -*-
import base64, cv2, numpy as np

b64="""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"""


print (cv2.__version__)
print (np.__version__)

data = base64.b64decode(b64)
buf = np.frombuffer(data, np.uint8) ## -- here seems to be the problem
img = cv2.imdecode(buf, -1)
print (img.shape)  ## (200, 300, 4) , -- correct.
cv2.imshow("web",img)
cv2.waitKey()

ocv = img
